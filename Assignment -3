1.Functions reduce the need for duplicate code. This makes programs shorter, easier to read, and easier to update.

2.The code in a function executes when the function is called, not when the function is defined.

3.The def statement defines (that is, creates) a function.

4.A function consists of the def statement and the code in its def clause.
  A function call is what moves the program execution into the function, and the function call evaluates to the function's return value.

5.There is one global scope, and a local scope is created whenever a function is called.

6.When a function returns, the local scope is destroyed, and all the variables in it are forgotten.

7.A return value is the value that a function call evaluates to. Like any value, a return value can be used as part of an expression.

8.If there is no return statement for a function, its return value is None.

9.A global statement will force a variable in a function to refer to the global variable.

10.The data type of None is NoneType.

11.That import statement imports a module named areallyourpetsnamederic.

12.This function can be called with spam. bacon().

13.When it encounters an error, the control is passed to the except block, skipping the code in between. As seen in the above code, we have moved our code inside a try and except statement. Try running the program and it should throw an error message instead of crashing the program.

14.The try block lets you test a block of code for errors. The except block lets you handle the error.
