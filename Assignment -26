1.What is the purpose of Python's OOP?
A.Object-Oriented Programming makes the program easy to understand as well as efficient. Since the class is sharable, the code can be reused. Data is safe and secure with data abstraction. Polymorphism allows the same interface for different objects, so programmers can write efficient code.

2.Where does an inheritance search look for an attribute?
A.The whole point of a namespace tool like the class statement is to support name inheritance. In Python, inheritance happens when an object is qualified, and involves searching an attribute definition tree (one or more namespaces). Every time you use an expression of the form object.

3.How do you distinguish between a class object and an instance object?
A.Class:-
  1.A class is a template for creating objects in program.
  2.A class is a logical entity
  3.A class does not allocate memory space when it is created.
 
  Object:-
  1.The object is an instance of a class.
  2.Object is a physical entity
  3.Object allocates memory space whenever they are created.

4.What makes the first argument in a classâ€™s method function special?
A.The calling process is automatic while the receiving process is not (its explicit). This is the reason the first parameter of a function in class must be the object itself. Writing this parameter as self is merely a convention. It is not a keyword and has no special meaning in Python.

5.What is the purpose of the __init__ method?
A.The __init__ method is the Python equivalent of the C++ constructor in an object-oriented approach. The __init__ function is called every time an object is created from a class. The __init__ method lets the class initialize the object's attributes and serves no other purpose. It is only used within classes.

6.What is the process for creating a class instance?
A.The new operator requires a single, postfix argument: a call to a constructor. The name of the constructor provides the name of the class to instantiate. The constructor initializes the new object. The new operator returns a reference to the object it created.

7.What is the process for creating a class?
A.1)Create a Class. To create a class, use the keyword class : ... 
  2)Create Object. Now we can use the class named MyClass to create objects: ... 
  3)The self Parameter. ... 
  4)Modify Object Properties. ... 
  5)Delete Object Properties. ... 
  6)Delete Objects.

8.How would you define the superclasses of a class?
A.A superclass is the class from which many subclasses can be created. The subclasses inherit the characteristics of a superclass. The superclass is also known as the parent class or base class. In the above example, Vehicle is the Superclass and its subclasses are Car, Truck and Motorcycle.
